{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Animes } from \"./src/pages/Animes/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport actions from \"./src/pages/Animes/data\";\nimport { useState } from 'react';\nimport { AntDesign } from '@expo/vector-icons';\nimport { Cadastro } from \"./src/pages/Animes/add\";\nimport * as SystemUI from 'expo-system-ui';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar color = await SystemUI.getBackgroundColorAsync();\nvar statusBarHeight = StatusBar.currentHeight;\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    pageAnimes = _useState2[0],\n    setPageAnimes = _useState2[1];\n  function abrirPageAnimes() {\n    setPageAnimes(true);\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.pages,\n      children: _jsx(TouchableOpacity, {\n        activeOpacity: 0.3,\n        style: styles.buttonsDock,\n        onPress: abrirPageAnimes,\n        children: _jsx(Image, {\n          style: styles.animesButtonIcon,\n          source: require(\"./assets/animes.png\")\n        })\n      })\n    }), _jsx(View, {\n      children: _jsx(Modal, {\n        visible: pageAnimes,\n        animationType: \"fade\",\n        children: _jsx(Animes, {\n          closeWindow: function closeWindow() {\n            return setPageAnimes(false);\n          }\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: color,\n    padding: '15%',\n    flexDirection: 'row'\n  },\n  pages: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n    justifyContent: 'space-around',\n    alignItems: \"center\",\n    alignContent: 'center'\n  },\n  animesButtonIcon: {\n    padding: 0,\n    margin: 0,\n    height: 40,\n    width: 40\n  },\n  buttonsDock: {\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    alignItems: \"center\",\n    alignContent: 'center',\n    borderRadius: 13,\n    height: 60,\n    width: 60,\n    borderColor: 'black',\n    borderWidth: 1\n  },\n  contentText: {\n    marginTop: 1,\n    fontSize: 9,\n    marginStart: 'auto',\n    marginEnd: 'auto'\n  }\n});","map":{"version":3,"names":["NavigationContainer","Animes","StyleSheet","Text","View","StatusBar","TouchableOpacity","Modal","ScrollView","Button","FlatList","Image","actions","useState","AntDesign","Cadastro","SystemUI","jsx","_jsx","jsxs","_jsxs","color","getBackgroundColorAsync","statusBarHeight","currentHeight","App","_useState","_useState2","_slicedToArray","pageAnimes","setPageAnimes","abrirPageAnimes","style","styles","container","children","pages","activeOpacity","buttonsDock","onPress","animesButtonIcon","source","require","visible","animationType","closeWindow","create","flex","backgroundColor","padding","flexDirection","justifyContent","alignItems","alignContent","margin","height","width","borderRadius","borderColor","borderWidth","contentText","marginTop","fontSize","marginStart","marginEnd"],"sources":["/home/jhonatanrs/Documents/GitHub/ExpoJhonatanrs/App.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { Animes } from \"./src/pages/Animes/index\";\nimport { StyleSheet, Text, View, StatusBar, TouchableOpacity,Modal, ScrollView, Button, FlatList, Image } from 'react-native';\nimport actions from './src/pages/Animes/data';\nimport { useState } from 'react';\nimport { AntDesign } from '@expo/vector-icons'\nimport { Cadastro } from './src/pages/Animes/add';\nimport * as SystemUI from 'expo-system-ui';\n\nconst color = await SystemUI.getBackgroundColorAsync();\n\nconst statusBarHeight = StatusBar.currentHeight;\n\nexport default function App() {\n  const [pageAnimes, setPageAnimes] = useState(false);\n\n  function abrirPageAnimes(){\n    setPageAnimes(true);\n  }\n\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.pages}>\n        <TouchableOpacity activeOpacity={0.3} style={styles.buttonsDock} onPress={abrirPageAnimes}>\n          <Image style={styles.animesButtonIcon} source={require('./assets/animes.png')}/>\n        </TouchableOpacity>\n      </View>\n    \n      \n      <View>\n        <Modal visible={pageAnimes} animationType=\"fade\">\n          <Animes closeWindow={() => setPageAnimes(false)}/>\n        </Modal>\n      </View>\n    </View>\n  );\n \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    //marginTop: statusBarHeight,\n    flex: 1,\n    backgroundColor: color,\n    padding: '15%',\n    flexDirection: 'row',\n  },\n  pages:{\n    flex: 1,\n    flexDirection: 'column-reverse',\n    justifyContent: 'space-around',\n    alignItems: \"center\",\n    alignContent: 'center',\n  },\n  animesButtonIcon:{\n    padding: 0,\n    margin: 0,\n    height: 40,\n    width: 40,\n  },\n  buttonsDock:{\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    alignItems: \"center\",\n    alignContent: 'center',\n    borderRadius: 13,\n    height: 60,\n    width: 60,\n    borderColor: 'black',\n    borderWidth: 1,\n  },\n  contentText:{\n    marginTop: 1,\n    fontSize: 9,\n    marginStart: 'auto',\n    marginEnd: 'auto'\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}