{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useState } from 'react';\nvar actions = {\n  mostrarData: function () {\n    var _mostrarData = _asyncToGenerator(function* () {\n      var response = yield AsyncStorage.getItem(\"@JhonatanrsAndroidExpoApp:Animes\");\n      var data = response ? JSON.parse(response) : [];\n      for (var i = 0; i < data.length; i++) {\n        console.log(data[i].name);\n      }\n    });\n    function mostrarData() {\n      return _mostrarData.apply(this, arguments);\n    }\n    return mostrarData;\n  }(),\n  exportData: function () {\n    var _exportData = _asyncToGenerator(function* () {\n      var response = yield AsyncStorage.getItem(\"@JhonatanrsAndroidExpoApp:Animes\");\n      var data = response ? JSON.parse(response) : [];\n      var exportDataTxt = '';\n      for (var i = 0; i < data.length; i++) {\n        var exportData = '';\n        exportData += data[i].id + ',';\n        exportData += data[i].name + ',';\n        exportData += data[i].status + ',';\n        exportData += data[i].release + ',';\n        exportData += data[i].season01 + ',';\n        exportData += data[i].season02 + ',';\n        exportData += data[i].season03 + ',';\n        exportData += data[i].season04 + ',';\n        exportData += data[i].season05 + ',';\n        exportData += data[i].season06 + ',';\n        exportData += data[i].season07 + ',';\n        exportData += data[i].season08 + ',';\n        exportData += data[i].season09 + ',';\n        exportData += data[i].season10;\n        exportDataTxt += exportData + ';\\n';\n      }\n      console.log(exportDataTxt);\n      alert(\"Exportado no console com Sucesso.\");\n    });\n    function exportData() {\n      return _exportData.apply(this, arguments);\n    }\n    return exportData;\n  }(),\n  importData: function () {\n    var _importData = _asyncToGenerator(function* () {\n      var response = yield AsyncStorage.getItem(\"@JhonatanrsAndroidExpoApp:Animes\");\n      var data = response ? JSON.parse(response) : [];\n      var nextId = data.length + 1;\n      var importDataTxt = 'One Piece,Currently Watching,Sunday,1076;Charlotte,Completed,-,13;Prison School,Completed,-,12;Shokugeki no Souma,Completed,-,86;Overlord,Completed,-,52;Owari no Seraph,Completed,-,24;Naruto Classico,Completed,-,220;';\n      var animes = importDataTxt.split(';');\n      try {\n        for (var i = 0; i < animes.length - 1; i++) {\n          var pAnimes = animes[i].split(',');\n          var id = nextId + i;\n          var name = pAnimes[0];\n          var status = pAnimes[1];\n          var release = pAnimes[2];\n          var season01 = pAnimes[3];\n          var season02 = pAnimes[4];\n          var season03 = pAnimes[5];\n          var season04 = pAnimes[6];\n          var season05 = pAnimes[7];\n          var season06 = pAnimes[8];\n          var season07 = pAnimes[9];\n          var season08 = pAnimes[10];\n          var season09 = pAnimes[11];\n          var season10 = pAnimes[12];\n          var inewData = {\n            id: id,\n            name: name,\n            status: status,\n            release: release,\n            season01: season01,\n            season02: season02,\n            season03: season03,\n            season04: season04,\n            season05: season05,\n            season06: season06,\n            season07: season07,\n            season08: season08,\n            season09: season09,\n            season10: season10\n          };\n          var _response = yield AsyncStorage.getItem(\"@JhonatanrsAndroidExpoApp:Animes\");\n          var previousData = _response ? JSON.parse(_response) : [];\n          var idata = [].concat(_toConsumableArray(previousData), [inewData]);\n          yield AsyncStorage.setItem(\"@JhonatanrsAndroidExpoApp:Animes\", JSON.stringify(idata));\n        }\n        alert(\"Importado com Sucesso.\");\n      } catch (error) {\n        console.log(error);\n        alert(\"Não foi possível importar\");\n      }\n    });\n    function importData() {\n      return _importData.apply(this, arguments);\n    }\n    return importData;\n  }()\n};\nexport default actions;","map":{"version":3,"names":["AsyncStorage","useState","actions","mostrarData","_mostrarData","_asyncToGenerator","response","getItem","data","JSON","parse","i","length","console","log","name","apply","arguments","exportData","_exportData","exportDataTxt","id","status","release","season01","season02","season03","season04","season05","season06","season07","season08","season09","season10","alert","importData","_importData","nextId","importDataTxt","animes","split","pAnimes","inewData","previousData","idata","concat","_toConsumableArray","setItem","stringify","error"],"sources":["/home/jhonatanrs/Documents/GitHub/AndroidExpoApp/src/pages/Actions/index.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useState } from 'react';\n\n\nconst actions = {\n    mostrarData: async function(){\n        const response = await AsyncStorage.getItem(\"@JhonatanrsAndroidExpoApp:Animes\");\n        const data = response ? JSON.parse(response) : [];\n        for (var i=0; i < data.length; i++) {\n          console.log(data[i].name); \n          //mostra todos os nomes no console\n        }\n      },\n    exportData: async function(){\n        const response = await AsyncStorage.getItem(\"@JhonatanrsAndroidExpoApp:Animes\");\n        const data = response ? JSON.parse(response) : [];\n        var exportDataTxt = '';\n        for (var i=0; i < data.length; i++) {\n          var exportData = '';\n          exportData += (data[i].id)+',';\n          exportData += (data[i].name)+',';\n          exportData += (data[i].status)+',';\n          exportData += (data[i].release)+',';\n          exportData += (data[i].season01)+',';\n          exportData += (data[i].season02)+',';\n          exportData += (data[i].season03)+',';\n          exportData += (data[i].season04)+',';\n          exportData += (data[i].season05)+',';\n          exportData += (data[i].season06)+',';\n          exportData += (data[i].season07)+',';\n          exportData += (data[i].season08)+',';\n          exportData += (data[i].season09)+',';\n          exportData += (data[i].season10);\n          exportDataTxt += (exportData)+';\\n';\n        }\n      \n        console.log(exportDataTxt)\n        //console.log(data.length)\n        alert(\"Exportado no console com Sucesso.\");\n      \n      },\n      importData: async function(){\n        \n        const response = await AsyncStorage.getItem(\"@JhonatanrsAndroidExpoApp:Animes\");\n        const data = response ? JSON.parse(response) : [];\n        const nextId = data.length + 1\n\n        var importDataTxt = 'One Piece,Currently Watching,Sunday,1076;Charlotte,Completed,-,13;Prison School,Completed,-,12;Shokugeki no Souma,Completed,-,86;Overlord,Completed,-,52;Owari no Seraph,Completed,-,24;Naruto Classico,Completed,-,220;';\n        var animes = importDataTxt.split(';');\n    \n        try{\n          \n          for (var i=0; i < animes.length - 1 ; i++) {\n          \n            const pAnimes = animes[i].split(',');\n            const id = nextId+i;\n            //id automatico mudar 1 2 3 4 para 0 1 2 3 futuramente \n            const name = pAnimes[0];\n            const status = pAnimes[1];\n            const release = pAnimes[2];\n            const season01 = pAnimes[3];\n            const season02 = pAnimes[4];\n            const season03 = pAnimes[5];\n            const season04 = pAnimes[6];\n            const season05 = pAnimes[7];\n            const season06 = pAnimes[8];\n            const season07 = pAnimes[9];\n            const season08 = pAnimes[10];\n            const season09 = pAnimes[11];\n            const season10 = pAnimes[12];\n    \n            const inewData = {\n              id,\n              name,\n              status,\n              release,\n              season01,\n              season02,\n              season03,\n              season04,\n              season05,\n              season06,\n              season07,\n              season08,\n              season09,\n              season10\n            }\n            \n    \n            const response = await AsyncStorage.getItem(\"@JhonatanrsAndroidExpoApp:Animes\");\n            const previousData = response ? JSON.parse(response) : [];\n            const idata = [...previousData, inewData];\n      \n            await AsyncStorage.setItem(\"@JhonatanrsAndroidExpoApp:Animes\",JSON.stringify(idata));\n      \n         \n        }\n    \n      alert(\"Importado com Sucesso.\");\n      \n      }catch(error){\n    \n        console.log(error);\n        alert(\"Não foi possível importar\");\n    \n      }\n      \n    },\n}\nexport default actions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}